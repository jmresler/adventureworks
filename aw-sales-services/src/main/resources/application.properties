#server.port=8080
server.servlet.context-path=/services

# JPA
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database=sql-server
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

# JDBC Data Source
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=AdventureWorks2017
spring.datasource.username=awadmin
spring.datasource.password=password
spring.data.rest.base-path=/apis

# Logging
logging.level.root=info
logging.level.org.springframework.web=debug
logging.level.org.hibernate=info


# Keycloak 
keycloak.realm=aw-realm
keycloak.resource=aw-service
keycloak.auth-server-url=http://localhost:8180/auth
keycloak.ssl-required=external
keycloak.public-client=true
keycloak.securityConstraints[0].authRoles[0]=aw-app-user
keycloak.securityConstraints[0].authRoles[1]=aw-app-admin
keycloak.securityConstraints[0].authRoles[2]=aw-super-user
keycloak.securityConstraints[0].securityCollections[0].name=member resource
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/addresses


# SSL setup
# Define a custom port instead of the default 8080, typically 8443 for Tomcat
server.port=8443

# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true
# The format used for the keystore 
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore.p12
# The password used to generate the certificate
server.ssl.key-store-password=Kadena1988#
# The alias mapped to the certificate
server.ssl.key-alias=tomcat